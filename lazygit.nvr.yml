gui:
    authorColors: {}
    branchColors: {}
    scrollHeight: 2
    scrollPastBottom: true
    mouseEvents: true
    skipDiscardChangeWarning: false
    skipStashWarning: false
    sidePanelWidth: 0.3333
    expandFocusedSidePanel: false
    mainPanelSplitMode: flexible
    language: auto
    timeFormat: 02 Jan 06
    shortTimeFormat: 3:04PM
    theme:
        activeBorderColor:
            - green
            - bold
        inactiveBorderColor:
            - default
        searchingActiveBorderColor:
            - cyan
            - bold
        optionsTextColor:
            - blue
        selectedLineBgColor:
            - blue
        selectedRangeBgColor:
            - blue
        cherryPickedCommitBgColor:
            - cyan
        cherryPickedCommitFgColor:
            - blue
        markedBaseCommitBgColor:
            - yellow
        markedBaseCommitFgColor:
            - blue
        unstagedChangesColor:
            - red
        defaultFgColor:
            - default
    commitLength:
        show: true
    skipNoStagedFilesWarning: false
    showListFooter: true
    showFileTree: true
    showRandomTip: true
    showCommandLog: true
    showBottomLine: true
    showIcons: true
    nerdFontsVersion: "3"
      #experimentalShowBranchHeads: false
    showBranchCommitHash: false
    commandLogSize: 8
    splitDiff: auto
    skipRewordInEditorWarning: false
    windowSize: ""
    border: single
    animateExplosion: true
git:
    paging:
        colorArg: always
        pager: ""
        useConfig: false
    commit:
        signOff: false
        verbose: default
    merging:
        manualCommit: false
        args: ""
    mainBranches:
        - master
        - main
    skipHookPrefix: WIP
    autoFetch: true
    autoRefresh: true
    fetchAll: true
    branchLogCmd: git log --graph --color=always --abbrev-commit --decorate --date=relative --pretty=medium {{branchName}} --
    allBranchesLogCmd: git log --graph --all --color=always --abbrev-commit --decorate --date=relative  --pretty=medium
    overrideGpg: false
    disableForcePushing: true
    commitPrefixes: {}
    parseEmoji: false
    log:
        order: topo-order
        showGraph: when-maximised
        showWholeGraph: false
    diffContextSize: 3
    mainBranches: [master, main]
os:
    editCommand: 'nvr'
    editCommandTemplate: "{{editor}} -cc split --remote-tab +'set bufhidden=wipe'  \"$(pwd)/{{filename}}\""
    # Edit: 'nvim' # see 'Configuring File Editing' section
    # EditAtLine: '{{editor}} +{{line}} -- {{filename}}'
    # Open: 'nvim'
update:
    method: prompt
    days: 14
refresher:
    refreshInterval: 10
    fetchInterval: 60
confirmOnQuit: false
quitOnTopLevelReturn: true
keybinding:
    universal:
        quit: <c-q>
        quit-alt1: <c-c>
        return: q
        quitWithoutChangingDirectory: Q
        togglePanel: <tab>
        prevItem: <up>
        nextItem: <down>
        prevItem-alt: k
        nextItem-alt: j
        prevPage: ','
        nextPage: .
        scrollLeft: H
        scrollRight: L
        gotoTop: <
        gotoBottom: '>'
        prevBlock: <left>
        nextBlock: <right>
        prevBlock-alt: h
        nextBlock-alt: l
        nextBlock-alt2: <tab>
        prevBlock-alt2: <backtab>
        jumpToBlock:
            - "1"
            - "2"
            - "3"
            - "4"
            - "5"
        nextMatch: "n"
        prevMatch: "N"
        startSearch: /
        optionMenu: ""
        optionMenu-alt1: '?'
        select: <space>
        goInto: <enter>
        confirm: <enter>
        confirmInEditor: <a-enter>
        remove: d
        new: "n"
        edit: e
        openFile: o
        scrollUpMain: <pgup>
        scrollDownMain: <pgdown>
        scrollUpMain-alt1: K
        scrollDownMain-alt1: J
        scrollUpMain-alt2: <c-u>
        scrollDownMain-alt2: <c-d>
        executeCustomCommand: ':'
        createRebaseOptionsMenu: m
        pushFiles: P
        pullFiles: p
        refresh: R
        createPatchOptionsMenu: <c-p>
        nextTab: ']'
        prevTab: '['
        nextScreenMode: +
        prevScreenMode: _
        undo: z
        redo: <c-z>
        filteringMenu: <c-s>
        diffingMenu: W
        diffingMenu-alt: <c-e>
        copyToClipboard: <c-o>
        openRecentRepos: <c-r>
        submitEditorText: <enter>
        extrasMenu: '@'
        toggleWhitespaceInDiffView: <c-w>
        increaseContextInDiffView: '}'
        decreaseContextInDiffView: '{'
    status:
        checkForUpdate: u
        recentRepos: <enter>
        allBranchesLogGraph: a
    files:
        commitChanges: c
        commitChangesWithoutHook: w
        amendLastCommit: A
        commitChangesWithEditor: C
        ignoreFile: i
        refreshFiles: r
        stashAllChanges: s
        viewStashOptions: S
        toggleStagedAll: a
        viewResetOptions: D
        fetch: f
        toggleTreeView: '`'
        openMergeTool: M
        openStatusFilter: <c-b>
    branches:
        createPullRequest: o
        viewPullRequestOptions: O
        copyPullRequestURL: <c-y>
        checkoutBranchByName: c
        forceCheckoutBranch: F
        rebaseBranch: r
        renameBranch: R
        mergeIntoCurrentBranch: M
        viewGitFlowOptions: i
        fastForward: f
        createTag: T
        pushTag: P
        setUpstream: u
        fetchRemote: f
    commits:
        squashDown: s
        renameCommit: r
        renameCommitWithEditor: R
        viewResetOptions: g
        markCommitAsFixup: f
        createFixupCommit: F
        squashAboveCommits: S
        moveDownCommit: <c-j>
        moveUpCommit: <c-k>
        amendToCommit: A
        resetCommitAuthor: a
        pickCommit: p
        revertCommit: t
        cherryPickCopy: c
        cherryPickCopyRange: C
        pasteCommits: v
        tagCommit: T
        checkoutCommit: <space>
        resetCherryPick: <c-R>
        copyCommitAttributeToClipboard: "y"
        openLogMenu: <c-l>
        openInBrowser: o
        viewBisectOptions: b
    stash:
        popStash: g
        renameStash: r
    commitFiles:
        checkoutCommitFile: c
    main:
        toggleDragSelect: v
        toggleDragSelect-alt: V
        toggleSelectHunk: a
        pickBothHunks: b
        editSelectHunk: E
    submodules:
        init: i
        update: u
        bulkMenu: b
disableStartupPopups: false
services: {}
notARepository: prompt
promptToReturnFromSubprocess: true
customCommands:
    - key: "M"
      command: "git mergetool {{ .SelectedFile.Name }}"
      context: "files"
      loadingText: "opening git mergetool"
      subprocess: true
    - key: 'N'
      description: 'create annotated tag'
      command: "git tag -a {{index .PromptResponses 0}} -m \"{{index .PromptResponses 1}}\""
      context: 'tags'
      prompts:
        - type: 'input'
          title: 'Annotated tag name:'
        - type: 'input'
          title: 'Annotated tag message:'
    - key: '<c-p>'
      command: 'git push {{.CheckedOutBranch.UpstreamRemote}} {{.SelectedLocalCommit.Sha}}:refs/for/{{.CheckedOutBranch.UpstreamBranch}}{{if index .PromptResponses 1}}%{{index .PromptResponses 1}}{{end}}'
      description: 'Push stack from selected commit to Gerrit'
      context: 'commits'
      stream: true
      prompts:
        - type: 'confirm'
          title: "Confirm:"
          body: "Are you sure you want to push to gerrit (refs/for/{{.CheckedOutBranch.UpstreamBranch}})?"
        - type: 'input'
          title: "Gerrit % Extra"
